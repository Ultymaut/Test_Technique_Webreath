{% extends 'base.html.twig' %}
    {% block title %}
        Dashboard Modules
    {% endblock %}
{% block body %}
    {# message pop-up lors de la création d'un module #}
    {% for message in app.flashes('success') %}
        <div class="justify-content-center d-flex">
            <div id="alert" class="alert data-bs-dismiss alert-success mt-4 justify-content-center d-flex" style="width: 50%; height: 50%" >
                <h5>
                    {{ message }}
                </h5>
            </div>
        </div>
    {% endfor %}
    <h1 class="text-center mt-4"> Dashboard Modules</h1>
    <div class="container">
        <h3 class="text-center mt-4">
            Liste des {{ total }} modules
        </h3>

        <table class="table table-active table-hover table-bordered  mt-4">
            <thead>
            <tr>
                <th> Nom du module </th>
                <th> Temperature </th>
                <th> Vent </th>
                <th> Humidité </th>
                <th> Temps d'activité </th>
                <th> Fiche module </th>
                <th> Redémarrer </th>

            </tr>
            </thead>
            <tbody class="table-success">
            {% for module in module %}
                {% set notWorking = module.isWorking ? '' : 'table-danger' %}
            <tr class="{{ notWorking }}">
                <td>{{ module.name }}</td>
                <td>{{ module.temperature }}°C</td>
                <td>{{ module.wind }} KM/H</td>
                <td>{{ module.humidity }} %</td>
                {# verifie si le booléan est true ou false, si en false on a un visuel de la ligne au sein du tableau qui passe en rouge #}
                <td id="uptime">{{ module.uptime ? module.uptime|date('h:i:s') : 'N/A' }}</td>
                <td>  <a type="button" class="btn btn-primary pt-0" href="{{ path('app_etat',{id: module.id}) }}"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye" viewBox="0 0 16 16">
                        <path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z"/>
                        <path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z"/>
                    </svg></a></td>
                <td>
                <a type="button" class="btn btn-warning pt-0" href="{{ path('app_restart', {id: module.id}) }}"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-repeat" viewBox="0 0 16 16">
                        <path d="M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z"/>
                        <path fill-rule="evenodd" d="M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z"/>
                    </svg></a>
                </td>
            </tr>
            {% endfor %}
            </tbody>
        </table>

        <div class="pagination d-flex justify-content-center mt-2 ">
            {{ knp_pagination_render(module) }}
        </div>
    </div>

{% endblock %}

{% block javascripts %}
   {#  <script>
        function updateUptime() {
            fetch('{{ path('api_get_module_uptime', {'id': module.id}) }}')
                .then(response => response.json())
                .then(data => {
                    const activityUptime = document.getElementById('uptime');
                    activityUptime.textContent = data.uptime;
                })
                .catch(error => {
                    console.error('Error fetching activity time:', error);
                });
        }

        // Actualise le temps d'activité toutes les 5 secondes
        setInterval(updateUptime, 5000);
    </script>#}
{% endblock %}





